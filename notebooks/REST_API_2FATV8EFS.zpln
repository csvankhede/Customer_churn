{
  "paragraphs": [
    {
      "text": "%spark.pyspark\n%tb\nfrom flask import Flask, jsonify, request\nimport findspark\nfindspark.init()\n# import libraries\nimport pyspark \nfrom pyspark.ml import PipelineModel\nfrom pyspark.sql.types import *\nimport pyspark as ps \n\nimport traceback\n\napp \u003d Flask(__name__)\n\n@app.route(\u0027/\u0027,methods\u003d[\u0027GET\u0027,\u0027POST\u0027])\ndef predict():\n    try:\n        json \u003d request.get_json(force\u003dTrue)\n        sample \u003d spark.createDataFrame(sc.parallelize([json]),schema\u003dschema)\n        pred \u003d model.transform(sample)\n        probability \u003d pred.select(\u0027probability\u0027).collect()[0].asDict()[\u0027probability\u0027][1]\n        return jsonify({\u0027probability\u0027:probability})\n    except:\n        return jsonify({\u0027traceback\u0027:traceback.format_exc()})\n\n\nif __name__\u003d\u003d\"__main__\":\n    # print(\"Loading model...\")\n    # load pipeline\n    model \u003d PipelineModel.load(\u0027file:///home/csvankhede/workspace/Customer_churn_prediction/pickled_obj/pipeline_v01\u0027)\n\n    # load schema\n    schema_rdd \u003d sc.pickleFile(\u0027file:///home/csvankhede/workspace/Customer_churn_prediction/pickled_obj/schema.pickle\u0027)\n    schema \u003d StructType(schema_rdd.collect())\n\n    # sample \u003d \u0027{\"customerid\": \"6713-OKOMC\", \"gender\": \"Female\", \"seniorcitizen\": 0, \"partner\": \"No\", \"dependents\": \"No\", \"tenure\": 10, \"phoneservice\": \"No\", \"multiplelines\": \"No phone service\", \"internetservice\": \"DSL\", \"onlinesecurity\": \"Yes\", \"onlinebackup\": \"No\", \"deviceprotection\": \"No\", \"techsupport\": \"No\", \"streamingtv\": \"No\", \"streamingmovies\": \"No\", \"contract\": \"Month-to-month\", \"paperlessbilling\": \"No\", \"paymentmethod\": \"Mailed check\", \"monthlycharges\": 29.75, \"totalcharges\": 301.9}\u0027\n    app.run(debug\u003dTrue)",
      "user": "anonymous",
      "dateUpdated": "2020-06-18 11:40:12.073",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "/home/csvankhede/spark/python/lib/pyspark.zip/pyspark/util.py:141: UserWarning: PYSPARK_PIN_THREAD feature is enabled. However, note that it cannot inherit the local properties from the parent thread although it isolates each thread on PVM and JVM with its own local properties. \nTo work around this, you should manually copy and set the local properties from the parent thread to the child thread when you create another thread.\nNo traceback available to show.\n * Serving Flask app \"__main__\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: on\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n * Restarting with inotify reloader\nAn exception has occurred, use %tb to see the full traceback.\n\n\u001b[0;31mSystemExit\u001b[0m\u001b[0;31m:\u001b[0m 1\n/home/csvankhede/anaconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3339: UserWarning: To exit: use \u0027exit\u0027, \u0027quit\u0027, or Ctrl-D.\n  warn(\"To exit: use \u0027exit\u0027, \u0027quit\u0027, or Ctrl-D.\", stacklevel\u003d1)\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592460106248_1155176412",
      "id": "paragraph_1592460106248_1155176412",
      "dateCreated": "2020-06-18 11:31:46.248",
      "dateStarted": "2020-06-18 11:40:12.081",
      "dateFinished": "2020-06-18 11:40:48.068",
      "status": "ERROR"
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2020-06-18 11:39:34.521",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592460232347_-1113167790",
      "id": "paragraph_1592460232347_-1113167790",
      "dateCreated": "2020-06-18 11:33:52.347",
      "status": "READY"
    }
  ],
  "name": "REST_API",
  "id": "2FATV8EFS",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}