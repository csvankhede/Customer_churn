{
  "paragraphs": [
    {
      "text": "%md\n# Load data from Cassandra",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:58:47.126",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eLoad data from Cassandra\u003c/h1\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856910464_354522378",
      "id": "paragraph_1591856910464_354522378",
      "dateCreated": "2020-06-11 11:58:30.464",
      "dateStarted": "2020-06-11 11:58:43.680",
      "dateFinished": "2020-06-11 11:58:43.685",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nimport warnings \nimport pickle\nwarnings.filterwarnings(\u0027ignore\u0027)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:21:13.175",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591858297903_1630145603",
      "id": "paragraph_1591858297903_1630145603",
      "dateCreated": "2020-06-11 12:21:37.903",
      "dateStarted": "2020-06-17 17:21:13.182",
      "dateFinished": "2020-06-17 17:21:13.369",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n\ntrain \u003d spark.read.format(\"org.apache.spark.sql.cassandra\") \\\n  .option(\"confirm.truncate\", \"true\") \\\n  .option(\"spark.cassandra.connection.host\", \"127.0.0.1\") \\\n  .option(\"spark.cassandra.connection.port\", \"9042\") \\\n  .option(\"keyspace\", \"product_churn\") \\\n  .option(\"table\", \"train\").load()\n\ntest \u003d spark.read.format(\"org.apache.spark.sql.cassandra\") \\\n  .option(\"confirm.truncate\", \"true\") \\\n  .option(\"spark.cassandra.connection.host\", \"127.0.0.1\") \\\n  .option(\"spark.cassandra.connection.port\", \"9042\") \\\n  .option(\"keyspace\", \"product_churn\") \\\n  .option(\"table\", \"test\").load()",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:21:16.191",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856928264_1661216577",
      "id": "paragraph_1591856928264_1661216577",
      "dateCreated": "2020-06-11 11:58:48.264",
      "dateStarted": "2020-06-17 17:21:16.208",
      "dateFinished": "2020-06-17 17:21:16.473",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n\nprint(\u0027train shape: \u0027,(train.count(),len(train.columns)))\n\nprint(\u0027test shape: \u0027,(test.count(),len(test.columns)))",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:21:20.035",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "train shape:  (4975, 3)\ntest shape:  (2057, 3)\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591857016246_1780427268",
      "id": "paragraph_1591857016246_1780427268",
      "dateCreated": "2020-06-11 12:00:16.246",
      "dateStarted": "2020-06-17 17:21:20.040",
      "dateFinished": "2020-06-17 17:21:22.069",
      "status": "FINISHED"
    },
    {
      "text": "%md\n# 5. Model building\n\n1. Logistics regression\n2. KNN\n3. Decision tree\n4. SVM\n5. Naive bayes\n6. Randome forest\n7. Gaussian NB\n8. LightGBM\n9. XGBoost\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:55:40.730",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e5. Model building\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003eLogistics regression\u003c/li\u003e\n\u003cli\u003eKNN\u003c/li\u003e\n\u003cli\u003eDecision tree\u003c/li\u003e\n\u003cli\u003eSVM\u003c/li\u003e\n\u003cli\u003eNaive bayes\u003c/li\u003e\n\u003cli\u003eRandome forest\u003c/li\u003e\n\u003cli\u003eGaussian NB\u003c/li\u003e\n\u003cli\u003eLightGBM\u003c/li\u003e\n\u003cli\u003eXGBoost\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856680119_-1759241104",
      "id": "paragraph_1591856680119_-1759241104",
      "dateCreated": "2020-06-11 11:54:40.119",
      "dateStarted": "2020-06-11 11:55:37.875",
      "dateFinished": "2020-06-11 11:55:37.887",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.ml.classification import LogisticRegression,DecisionTreeClassifier,GBTClassifier,NaiveBayes,RandomForestClassifier,LinearSVC\nfrom pyspark.ml.clustering import KMeans\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:23:11.087",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591857199807_670514525",
      "id": "paragraph_1591857199807_670514525",
      "dateCreated": "2020-06-11 12:03:19.807",
      "dateStarted": "2020-06-17 17:23:11.094",
      "dateFinished": "2020-06-17 17:23:11.255",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n# https://stackoverflow.com/questions/42138482/how-do-i-convert-an-array-i-e-list-column-to-vector\nfrom pyspark.ml.linalg import Vectors, VectorUDT\nfrom pyspark.sql.functions import udf\n\nlist_to_vector_udf \u003d udf(lambda l: Vectors.dense(l), VectorUDT())\nx_train \u003d train.select(list_to_vector_udf(train[\"features_sc\"]).alias(\"features_sc\"),train[\u0027churn_enc\u0027])\nx_test \u003d test.select(list_to_vector_udf(test[\u0027features_sc\u0027]).alias(\u0027features_sc\u0027),test[\u0027churn_enc\u0027])",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:23:13.024",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591860121644_1134211604",
      "id": "paragraph_1591860121644_1134211604",
      "dateCreated": "2020-06-11 12:52:01.645",
      "dateStarted": "2020-06-17 17:23:13.029",
      "dateFinished": "2020-06-17 17:23:13.190",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nx_train.printSchema(),x_test.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 16:39:08.124",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- features_sc: vector (nullable \u003d true)\n |-- churn_enc: double (nullable \u003d true)\n\nroot\n |-- features_sc: vector (nullable \u003d true)\n |-- churn_enc: double (nullable \u003d true)\n\n(None, None)"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591860475468_-1019158738",
      "id": "paragraph_1591860475468_-1019158738",
      "dateCreated": "2020-06-11 12:57:55.468",
      "dateStarted": "2020-06-15 16:39:08.133",
      "dateFinished": "2020-06-15 16:39:08.316",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 1. Logistics regression",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:58:06.374",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e1. Logistics regression\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856722784_1731439620",
      "id": "paragraph_1591856722784_1731439620",
      "dateCreated": "2020-06-11 11:55:22.784",
      "dateStarted": "2020-06-11 11:55:55.187",
      "dateFinished": "2020-06-11 11:55:55.196",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nimport matplotlib.pyplot as plt\nfrom pyspark.ml.evaluation import BinaryClassificationEvaluator\nfrom pyspark.mllib.evaluation import BinaryClassificationMetrics",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:27:38.251",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592219434921_84659595",
      "id": "paragraph_1592219434921_84659595",
      "dateCreated": "2020-06-15 16:40:34.921",
      "dateStarted": "2020-06-17 17:27:38.258",
      "dateFinished": "2020-06-17 17:27:38.417",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n%matplotlib inline \nlogi_model \u003d LogisticRegression(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027, predictionCol\u003d\u0027prediction\u0027,\\\n                          maxIter\u003d500, regParam\u003d0.001, elasticNetParam\u003d0.0, tol\u003d1e-06, fitIntercept\u003dTrue,\\\n                          threshold\u003d0.5,aggregationDepth\u003d2, family\u003d\u0027auto\u0027).fit(x_train)\n\n\"\"\"\ntrainingSummary \u003d logi_model.summary\n\nroc \u003d trainingSummary.roc.toPandas()\nplt.plot(roc[\u0027FPR\u0027],roc[\u0027TPR\u0027])\nplt.ylabel(\u0027False Positive Rate\u0027)\nplt.xlabel(\u0027True Positive Rate\u0027)\nplt.title(\u0027ROC Curve\u0027)\n# z.show(plt)\n# plt.show()\nprint(\u0027Training set ROC: \u0027 + str(trainingSummary.areaUnderROC))\nprint(\u0027Training set Accuracy: \u0027+str(trainingSummary.accuracy))\n\npred \u003d logi_model.transform(x_test)\nevaluator \u003d BinaryClassificationEvaluator(labelCol\u003d\u0027churn_enc\u0027)\nprint(\"Test_SET (Area Under ROC): \" + str(evaluator.evaluate(pred, {evaluator.metricName: \"areaUnderROC\"})))\n\"\"\"\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d logi_model.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027probability\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npre_test \u003d logi_model.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027probability\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1])                           ",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 17:14:04.036",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x7fb4304d9410\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856905303_-1911852046",
      "id": "paragraph_1591856905303_-1911852046",
      "dateCreated": "2020-06-11 11:58:25.303",
      "dateStarted": "2020-06-15 17:11:42.769",
      "dateFinished": "2020-06-15 17:11:46.112",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 2. KNN",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:58:07.824",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e2. KNN\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856769260_118164184",
      "id": "paragraph_1591856769260_118164184",
      "dateCreated": "2020-06-11 11:56:09.260",
      "dateStarted": "2020-06-11 11:56:40.306",
      "dateFinished": "2020-06-11 11:56:40.310",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 3. Decision tree",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 13:10:47.244",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e3. Decision tree\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856770964_1026532214",
      "id": "paragraph_1591856770964_1026532214",
      "dateCreated": "2020-06-11 11:56:10.964",
      "dateStarted": "2020-06-11 13:10:47.248",
      "dateFinished": "2020-06-11 13:10:48.250",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n%matplotlib inline \ndecision_model \u003d DecisionTreeClassifier(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027, \n                                     probabilityCol\u003d\u0027probability\u0027, rawPredictionCol\u003d\u0027rawPrediction\u0027, maxDepth\u003d5,\n                                     maxBins\u003d32, minInstancesPerNode\u003d1, minInfoGain\u003d0.0, maxMemoryInMB\u003d256,\n                                     cacheNodeIds\u003dFalse, checkpointInterval\u003d10, impurity\u003d\u0027gini\u0027, seed\u003d45).fit(x_train)\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 17:15:06.036",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Exception ignored in: \u003cfunction JavaModelWrapper.__del__ at 0x7fb436e33d40\u003e\nTraceback (most recent call last):\n  File \"/home/csvankhede/spark/python/lib/pyspark.zip/pyspark/mllib/common.py\", line 142, in __del__\nAttributeError: \u0027MulticlassMetrics\u0027 object has no attribute \u0027_sc\u0027\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591860653260_2035121856",
      "id": "paragraph_1591860653260_2035121856",
      "dateCreated": "2020-06-11 13:00:53.260",
      "dateStarted": "2020-06-15 17:15:06.046",
      "dateFinished": "2020-06-15 17:15:10.960",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n%matplotlib inline\n\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d decision_model.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027probability\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npred_test \u003d decision_model.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027probability\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1],t)                     ",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 17:17:05.835",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x7fb42fd2f210\u003e\n"
          },
          {
            "type": "IMG",
            "data": "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WtU6YVZHc4Ndu07yyivrSEsTRo5syjvvdKRo0UJWh6WU8kCeW2CnD268qz0U9Lc2lkwyjzYfOjSUAwfOMmJEU50jVSmlDsyzTata/T7wd4+cmDlnN258B5MmdaJhw4p07FjD4siUUp7Mcwc5uuHqjT/8EENIyKf89ls8AAUKGKZM6arFtVJKAUR/bvvXTbqHHD16jvbt57Bs2YGM58aMaaHFtVLqtnlmgZ161bbADLhF/+uEhGSeeWYl7drNJirqDyZN+snqkJRSyr2cPwInNkHBolDr1hZ/dBQR4T//+YWGDT9m3boYxo2LREQsjUkp5V08s4vI8R/h6kUoFwQlrB18smXLccLDF7J//1l8fAxjx/6NsWNbWxqTUkq5nX1f2v6t1ctWZFvk+PELDBnyLStXHgIgLKw+H33094xuIkop5QieWWAfsb57yNWrqUyY8AP//OePpKUJgYHlmDOnN6Ghd1oWk1JKuSURy7uHiAhffLGLUaNWcP58IqVLF+bDD/9O3753a3GtlHI4zy6wa1i3PHp09GnefvtHRITnnmvBG2+0p3Bhz/w4lVLKqU7vhD+joXBZqNrJkhCuXEnm5ZfXcv58It271+Y//7mfO+8sbkksSinv53kVYWoSnNsPfqXgzpYuPXRammRMs9eoUSWmTu1GgwYV+Nvfqro0DqWU8ijpc1/X7QM+BV166PS8XbRoISIiehITc55BgxrrWWullFN5XoGdZJuhg2pdbHOpusj+/WcYMGARL77Yit69bcuyjxjR1GXHVzbJycnExcWRmJhodShK3VThwoUJCAigYEHXFpNuK73/deDDLjvk+fOJjB69gvLli/D++10A6NBBZwdxNc3ZylM4Om97XoHtWwTqh0Otni45XFqa8O9/b+all9aSmJjCxIkb6NWrnp79sEhcXBzFixenWrVq+h0otyQinD17lri4OKpXr251ONaTNNuiMr9vhDtbuOSQq1YdYvDgJRw/fpGiRQvywgutqFixmEuOra6lOVt5Amfkbc8rsAsVg26zXXKomJjzDBy4mHXrYgAYMKARH3zQVZOEhRITEzVRK7dmjKFs2bKcPn3a6lDcgykAbSe75FCXLl3luedW88knvwDQvHkAs2f30uLaQpqzlSdwRt72vALbBUSE//53O888s4pLl65SoUJRPv30Pnr2rGd1aAo0USu3pz+jrrd+/TEee2wRR4+ep1AhHyZMaMtzz7XEx8czl3vwJvr7oDyBo39OtcDOwpUrybz11gYuXbqaMUdquXJFrA5LKaXUTUydupmjR88THFyJOXN60aBBRatDUkrlY/qnvZ2IkJKSBkDRooWYPbsXX3zxAF9/HabFtbqGj48PwcHBBAUFcf/993P+/PmM1/bs2UP79u2pU6cOtWvX5o033rhmhbgVK1YQGhpKYGAg9erV47nnnrOiCdnavn07Q4YMsTqMbP3zn/+kVq1a1K1bl1WrVmW5zdq1awkJCSE4OJh7772XQ4dsC4usX7+ekJAQfH19mT9//jXvefHFFwkKCiIoKIivvvoqx31NmzaNiIgIJ7VS5SQ9ZwN8+OHfmTixHZs3D9HiWl1Dc7b1bidnJyUl0bdvX2rVqkWzZs2IiYkB4OrVqwwcOJAGDRrQqFEj1q1bB8DFixcJDg7OuJUrV46nn34acHHOFhGPujVp0kQc7dSpSxIW9rWMHLnM4ftWjrV3716rQ5CiRYtm3A8PD5eJEyeKiMiVK1ekRo0asmrVKhERuXz5snTt2lWmTZsmIiK7du2SGjVqSHR0tIiIJCcny/Tp0x0aW3Jy8m3vIywsTKKiolx6zLzYs2ePNGzYUBITE+XIkSNSo0YNSUlJuWG72rVrZ/y8TJ8+XQYMGCAiIkePHpUdO3bIo48+KvPmzcvYfunSpdKxY0dJTk6WS5cuSZMmTSQ+Pj7bfV2+fFmCg4OzjDOrn1Vgm7hBHnXlzRk5OykpRcaP/16aN58hV6/e+N0r96E5O3uas/9yszw7ffp0GTp0qIiIfPnll9KnTx8REZk2bZo89thjIiJy8uRJCQkJkdTU1Bv2GxISIj/88IOIZJ+zRRybt/N9F5FFi/YxdOhSTp26TPHihRg/vrUOiPEU7zupX9+zkvM2di1atGDnzp0AfPHFF7Rq1YrOnTsDUKRIEaZNm0bbtm0ZOXIk7777LmPHjqVePVtffl9fX0aMGHHDPi9dusSTTz7Jtm3bMMbw6quv8uCDD1KsWDEuXboEwPz581m6dCmzZs3iscceo0yZMmzfvp3g4GAWLlxIVFQUpUqVAqBWrVr89NNPFChQgGHDhvHbb78B8MEHH9CqVatrjn3x4kV27txJo0aNANiyZQtPP/00CQkJ+Pv7ExERQd26dZk1axbLli0jMTGRy5cv8/333zNp0iS+/vprkpKS6N27N6+//joAvXr1IjY2lsTERJ566imeeOKJXH++WVm8eDH9+vXDz8+P6tWrU6tWLbZs2UKLFtfOUGGM4cKFCwDEx8dz5522VVarVasGQIEC117A27t3L23atMHX1xdfX18aNWrEypUr6dOnz033VaRIEapVq8aWLVu45557bqtdKnd27TpJePgioqL+wBiIjIyhc+eaVoelckNztubsW8jZixcv5rXXXgMgLCyMUaNGISLs3buXDh06AFChQgVKlSrFtm3brsnFBw8e5NSpU/ztb38DXJuz822Bff58Ik89tZI5c3YA0LZtNSIiempxrXItNTWVtWvXMnjwYMB2qbFJkybXbFOzZk0uXbrEhQsX2L17N88++2yO+33jjTcoWbIku3btAuDcuXM5vufAgQOsWbMGHx8f0tLSWLhwIQMHDmTz5s1Uq1aNihUr8tBDD/HMM89w77338ttvv9GlSxeio6Ov2c+2bdsICgrKeFyvXj3Wr1+Pr68va9as4R//+AcLFiwAYOPGjezcuZMyZcqwevVqDh48yJYtWxARevTowfr162ndujUzZ86kTJkyJCQk0LRpUx588EHKli17zXGfeeYZIiMjb2hXv379eOmll6557vjx4zRv3jzjcUBAAMePH7/hvTNmzKB79+74+/tTokQJNm3alO1n2KhRI15//XXGjBnDlStXiIyMpH79+jnuKzQ0lA0bNmiB7WSpqWlMmvQzr7wSSXJyGtWrl2LWrF60bq0Lfanc0ZztmTn7+PHjVKlSBbD9kVOyZEnOnj1Lo0aNMor32NhYfvnlF2JjY6/JxV9++SV9+/a9ZgCjq3J2viywV68+zKBBizl+/CKFC/vyzjsdGTXqnoxVGpWHyMNZC0dKSEggODiYmJgYmjRpQqdOtqWfReSmo5DzMjp5zZo1zJ07N+Nx6dKlc3zP//3f/+Hj4wNA3759mTBhAgMHDmTu3Ln07ds3Y7979+7NeM+FCxe4ePEixYv/tVz0iRMnKF++fMbj+Ph4BgwYwMGDBzHGkJycnPFap06dKFOmDACrV69m9erVNG7cGLCd0Tl48CCtW7dm6tSpLFy4EIDY2FgOHjx4Q7KeMmVK7j4cuKZ/ZLqsPt8pU6awfPlymjVrxqRJkxgzZgwzZsy46X47d+7M1q1badmyJeXLl6dFixb4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\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592220277220_-1723753303",
      "id": "paragraph_1592220277220_-1723753303",
      "dateCreated": "2020-06-15 16:54:37.220",
      "dateStarted": "2020-06-15 17:16:27.257",
      "dateFinished": "2020-06-15 17:16:30.604",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 4. SVM",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:58:11.642",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e4. SVM\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856772545_1853893755",
      "id": "paragraph_1591856772545_1853893755",
      "dateCreated": "2020-06-11 11:56:12.545",
      "dateStarted": "2020-06-11 11:57:03.264",
      "dateFinished": "2020-06-11 11:57:03.269",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nfrom handyspark import BinaryClassificationMetrics",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:34:37.825",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592395442588_285236670",
      "id": "paragraph_1592395442588_285236670",
      "dateCreated": "2020-06-17 17:34:02.588",
      "dateStarted": "2020-06-17 17:34:37.829",
      "dateFinished": "2020-06-17 17:34:37.989",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n%matplotlib inline\n\nfrom pyspark.ml.classification import LinearSVC\n\nsvc \u003d LinearSVC(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027, \n                                      rawPredictionCol\u003d\u0027rawPrediction\u0027,maxIter\u003d500,regParam\u003d0.3).fit(x_train)\n                                     \n\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d svc.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npred_test \u003d svc.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1])                     \n                                     ",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:34:40.200",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x7f27ab7c60d0\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592222677679_-1713407563",
      "id": "paragraph_1592222677679_-1713407563",
      "dateCreated": "2020-06-15 17:34:37.679",
      "dateStarted": "2020-06-17 17:34:40.219",
      "dateFinished": "2020-06-17 17:35:01.445",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 5. Naive bayes",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 17:54:06.080",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e5. Naive bayes\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856774700_1074179223",
      "id": "paragraph_1591856774700_1074179223",
      "dateCreated": "2020-06-11 11:56:14.700",
      "dateStarted": "2020-06-15 17:54:06.118",
      "dateFinished": "2020-06-15 17:54:07.100",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.ml.classification import NaiveBayes\n\nnb \u003d NaiveBayes(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027,  probabilityCol\u003d\"probability\",\\\nrawPredictionCol\u003d\u0027rawPrediction\u0027, smoothing\u003d1.0, modelType\u003d\"multinomial\").fit(x_train)\n\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d nb.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npred_test \u003d nb.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1])      ",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 17:57:27.882",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x7fb42fc6df90\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592223850891_-1470275308",
      "id": "paragraph_1592223850891_-1470275308",
      "dateCreated": "2020-06-15 17:54:10.892",
      "dateStarted": "2020-06-15 17:57:27.893",
      "dateFinished": "2020-06-15 17:57:36.488",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 6. Randome forest",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:03:24.287",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e6. Randome forest\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856776453_805605766",
      "id": "paragraph_1591856776453_805605766",
      "dateCreated": "2020-06-11 11:56:16.453",
      "dateStarted": "2020-06-15 18:03:24.296",
      "dateFinished": "2020-06-15 18:03:24.305",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.ml.classification import RandomForestClassifier\n\nrf \u003d RandomForestClassifier(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027,  probabilityCol\u003d\"probability\",\nrawPredictionCol\u003d\u0027rawPrediction\u0027,maxDepth\u003d5, maxBins\u003d32, minInstancesPerNode\u003d1, minInfoGain\u003d0.0, maxMemoryInMB\u003d256, cacheNodeIds\u003dFalse,\ncheckpointInterval\u003d10, impurity\u003d\"gini\", numTrees\u003d20, featureSubsetStrategy\u003d\"auto\", seed\u003dNone, subsamplingRate\u003d1.0).fit(x_train)\n\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d rf.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npred_test \u003d rf.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1])      ",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:36:30.551",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x7f27ab573390\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592224408099_1659230135",
      "id": "paragraph_1592224408099_1659230135",
      "dateCreated": "2020-06-15 18:03:28.099",
      "dateStarted": "2020-06-17 17:36:30.581",
      "dateFinished": "2020-06-17 17:36:41.984",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nrf.save(\u0027file:///home/csvankhede/workspace/Customer_churn_prediction/pickled_obj/random_forest\u0027)",
      "user": "anonymous",
      "dateUpdated": "2020-06-17 17:40:58.787",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592395593220_-1493942083",
      "id": "paragraph_1592395593220_-1493942083",
      "dateCreated": "2020-06-17 17:36:33.220",
      "dateStarted": "2020-06-17 17:40:58.802",
      "dateFinished": "2020-06-17 17:41:00.522",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 7. Gaussian Based Tree",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:07:43.094",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e7. Gaussian Based Tree\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856778511_-1607392869",
      "id": "paragraph_1591856778511_-1607392869",
      "dateCreated": "2020-06-11 11:56:18.511",
      "dateStarted": "2020-06-15 18:07:39.174",
      "dateFinished": "2020-06-15 18:07:39.209",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.ml.classification import GBTClassifier\n\ngbt \u003d GBTClassifier(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027, maxDepth\u003d5, maxBins\u003d32, minInstancesPerNode\u003d1, minInfoGain\u003d0.0, cacheNodeIds\u003dFalse, checkpointInterval\u003d10, lossType\u003d\"logistic\", maxIter\u003d5,\nstepSize\u003d0.1, seed\u003dNone, subsamplingRate\u003d1.0).fit(x_train)\n\nfig, axs \u003d plt.subplots(1, 2, figsize\u003d(12, 4))\npred_train \u003d gbt.transform(x_train)\n\nbcm \u003d BinaryClassificationMetrics(pred_train,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[0])\n\npred_test \u003d gbt.transform(x_test)\nbcm \u003d BinaryClassificationMetrics(pred_test,scoreCol\u003d\u0027rawPrediction\u0027, labelCol\u003d\u0027churn_enc\u0027)\nbcm.plot_roc_curve(ax\u003daxs[1])      ",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:17:47.743",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)\n\u001b[0;32m\u003cipython-input-220-075c2b1cf742\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m gbt \u003d GBTClassifier(featuresCol\u003d\u0027features_sc\u0027,labelCol\u003d\u0027churn_enc\u0027,predictionCol\u003d\u0027prediction\u0027, maxDepth\u003d5, maxBins\u003d32, minInstancesPerNode\u003d1, minInfoGain\u003d0.0, cacheNodeIds\u003dFalse, checkpointInterval\u003d10, lossType\u003d\"logistic\", maxIter\u003d5,\n\u001b[0;32m----\u003e 4\u001b[0;31m stepSize\u003d0.1, seed\u003dNone, subsamplingRate\u003d1.0).fit(x_train)\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxs\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfigsize\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/spark/python/lib/pyspark.zip/pyspark/ml/base.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, dataset, params)\u001b[0m\n\u001b[1;32m    129\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    130\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 131\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    132\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    133\u001b[0m             raise ValueError(\"Params must be either a param map or a list/tuple of param maps, \"\n\n\u001b[0;32m~/spark/python/lib/pyspark.zip/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    319\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    320\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 321\u001b[0;31m         \u001b[0mjava_model\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_fit_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    322\u001b[0m         \u001b[0mmodel\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjava_model\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    323\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_copyValues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/spark/python/lib/pyspark.zip/pyspark/ml/wrapper.py\u001b[0m in \u001b[0;36m_fit_java\u001b[0;34m(self, dataset)\u001b[0m\n\u001b[1;32m    316\u001b[0m         \"\"\"\n\u001b[1;32m    317\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_transfer_params_to_java\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 318\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_java_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    319\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    320\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_fit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/spark/python/lib/py4j-0.10.8.1-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1282\u001b[0m             \u001b[0mproto\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEND_COMMAND_PART\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1283\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1284\u001b[0;31m         \u001b[0manswer\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1285\u001b[0m         return_value \u003d get_return_value(\n\u001b[1;32m   1286\u001b[0m             answer, self.gateway_client, self.target_id, self.name)\n\n\u001b[0;32m~/spark/python/lib/py4j-0.10.8.1-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36msend_command\u001b[0;34m(self, command, retry, binary)\u001b[0m\n\u001b[1;32m   1012\u001b[0m         \u001b[0mconnection\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_connection\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1013\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1014\u001b[0;31m             \u001b[0mresponse\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mconnection\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1015\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mbinary\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1016\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_connection_guard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconnection\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/spark/python/lib/py4j-0.10.8.1-src.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36msend_command\u001b[0;34m(self, command)\u001b[0m\n\u001b[1;32m   1179\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1180\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1181\u001b[0;31m             \u001b[0manswer\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0msmart_decode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreadline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1182\u001b[0m             \u001b[0mlogger\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdebug\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Answer received: {0}\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1183\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0manswer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproto\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mRETURN_MESSAGE\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/anaconda3/lib/python3.7/socket.py\u001b[0m in \u001b[0;36mreadinto\u001b[0;34m(self, b)\u001b[0m\n\u001b[1;32m    587\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 589\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sock\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrecv_into\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    590\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    591\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_timeout_occurred\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1592224592537_1930726530",
      "id": "paragraph_1592224592537_1930726530",
      "dateCreated": "2020-06-15 18:06:32.537",
      "dateStarted": "2020-06-15 18:17:47.748",
      "dateFinished": "2020-06-15 18:21:06.493",
      "status": "ABORT"
    },
    {
      "text": "%md\n## 8. LightGBM",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:07:04.312",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e8. LightGBM\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856780278_-450060905",
      "id": "paragraph_1591856780278_-450060905",
      "dateCreated": "2020-06-11 11:56:20.278",
      "dateStarted": "2020-06-15 18:07:04.320",
      "dateFinished": "2020-06-15 18:07:04.332",
      "status": "FINISHED"
    },
    {
      "text": "%md\n## 9. XGBoost",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:07:07.139",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e9. XGBoost\u003c/h2\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856876941_-1832962821",
      "id": "paragraph_1591856876941_-1832962821",
      "dateCreated": "2020-06-11 11:57:56.942",
      "dateStarted": "2020-06-15 18:07:07.155",
      "dateFinished": "2020-06-15 18:07:07.162",
      "status": "FINISHED"
    },
    {
      "text": "%md\n# 6. Model performance",
      "user": "anonymous",
      "dateUpdated": "2020-06-15 18:07:09.718",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e6. Model performance\u003c/h1\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856697296_2002095830",
      "id": "paragraph_1591856697296_2002095830",
      "dateCreated": "2020-06-11 11:54:57.296",
      "dateStarted": "2020-06-15 18:07:09.724",
      "dateFinished": "2020-06-15 18:07:09.729",
      "status": "FINISHED"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2020-06-11 11:55:13.177",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1591856713177_164402589",
      "id": "paragraph_1591856713177_164402589",
      "dateCreated": "2020-06-11 11:55:13.177",
      "status": "READY"
    }
  ],
  "name": "Customer_churn_model.ipynb",
  "id": "2FBSPR1UC",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}